import schemdraw
from schemdraw.flow import*

with schemdraw.Drawing() as d:
     d += Start().label("Start")
     d += Arrow().down(d.unit/2)
  
 #Input the string
     d += Data(w = 5).label("Enter a string:\n string")
     d += Arrow().down(d.unit/2)
    
 #Reverse the string  
     d += Box(w = 5).label("Reverse the string:\n reverse_string")
     d += Arrow().down(d.unit/2)
        
 #Check if string and reverse_string are same
    
     d += (decision := Decision(w = 5, h = 4, S ="True",
                   E ="False").label("Is \n string\n == \nreverse_string")) #Diamond shape
     
  #If True  
     d += Arrow().length(d.unit/2)
     d += (true := Box(w = 5).label("String is Palindrome."))
     d += Arrow().length(d.unit/2)
    
 #End Program
     d += Ellipse().label("End")
    
 #If False. start the arrow from east of decision box.
     d += Arrow().right(d.unit/2).at(decision.E)
        
 # false is referring to the box where string is not a palindrome.

     d += (false := Box(w = 5).label("String is not palindrome."))
    
 # Add a downward arrow from the south of false box.
     d += Arrow().down(d.unit*2.5).at(false.S)
    
 #Eextend the arrow to reach the end of the program.
     d += Arrow().left(d.unit*1.7)
